<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yaorange.mapper.TPayBillMapper" >
  <resultMap id="BaseResultMap" type="com.yaorange.pojo.TPayBill" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="update_time" property="updateTime" jdbcType="BIGINT" />
    <result column="create_time" property="createTime" jdbcType="BIGINT" />
    <result column="sso_id" property="ssoId" jdbcType="BIGINT" />
    <result column="nick_name" property="nickName" jdbcType="VARCHAR" />
    <result column="union_pay_sn" property="unionPaySn" jdbcType="CHAR" />
    <result column="money" property="money" jdbcType="INTEGER" />
    <result column="business_type" property="businessType" jdbcType="TINYINT" />
    <result column="business_key" property="businessKey" jdbcType="BIGINT" />
    <result column="pay_channel" property="payChannel" jdbcType="TINYINT" />
    <result column="note" property="note" jdbcType="VARCHAR" />
    <result column="digest" property="digest" jdbcType="VARCHAR" />
    <result column="state" property="state" jdbcType="TINYINT" />
    <result column="original_pay_bill_id" property="originalPayBillId" jdbcType="BIGINT" />
    <result column="original_union_pay_sn" property="originalUnionPaySn" jdbcType="CHAR" />
    <result column="last_pay_time" property="lastPayTime" jdbcType="BIGINT" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, update_time, create_time, sso_id, nick_name, union_pay_sn, money, business_type, 
    business_key, pay_channel, note, digest, state, original_pay_bill_id, original_union_pay_sn, 
    last_pay_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.yaorange.pojo.TPayBillExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_pay_bill
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from t_pay_bill
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from t_pay_bill
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.yaorange.pojo.TPayBillExample" >
    delete from t_pay_bill
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.yaorange.pojo.TPayBill" >
    insert into t_pay_bill (id, update_time, create_time, 
      sso_id, nick_name, union_pay_sn, 
      money, business_type, business_key, 
      pay_channel, note, digest, 
      state, original_pay_bill_id, original_union_pay_sn, 
      last_pay_time)
    values (#{id,jdbcType=BIGINT}, #{updateTime,jdbcType=BIGINT}, #{createTime,jdbcType=BIGINT}, 
      #{ssoId,jdbcType=BIGINT}, #{nickName,jdbcType=VARCHAR}, #{unionPaySn,jdbcType=CHAR}, 
      #{money,jdbcType=INTEGER}, #{businessType,jdbcType=TINYINT}, #{businessKey,jdbcType=BIGINT}, 
      #{payChannel,jdbcType=TINYINT}, #{note,jdbcType=VARCHAR}, #{digest,jdbcType=VARCHAR}, 
      #{state,jdbcType=TINYINT}, #{originalPayBillId,jdbcType=BIGINT}, #{originalUnionPaySn,jdbcType=CHAR}, 
      #{lastPayTime,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="com.yaorange.pojo.TPayBill" >
    insert into t_pay_bill
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="ssoId != null" >
        sso_id,
      </if>
      <if test="nickName != null" >
        nick_name,
      </if>
      <if test="unionPaySn != null" >
        union_pay_sn,
      </if>
      <if test="money != null" >
        money,
      </if>
      <if test="businessType != null" >
        business_type,
      </if>
      <if test="businessKey != null" >
        business_key,
      </if>
      <if test="payChannel != null" >
        pay_channel,
      </if>
      <if test="note != null" >
        note,
      </if>
      <if test="digest != null" >
        digest,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="originalPayBillId != null" >
        original_pay_bill_id,
      </if>
      <if test="originalUnionPaySn != null" >
        original_union_pay_sn,
      </if>
      <if test="lastPayTime != null" >
        last_pay_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=BIGINT},
      </if>
      <if test="ssoId != null" >
        #{ssoId,jdbcType=BIGINT},
      </if>
      <if test="nickName != null" >
        #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="unionPaySn != null" >
        #{unionPaySn,jdbcType=CHAR},
      </if>
      <if test="money != null" >
        #{money,jdbcType=INTEGER},
      </if>
      <if test="businessType != null" >
        #{businessType,jdbcType=TINYINT},
      </if>
      <if test="businessKey != null" >
        #{businessKey,jdbcType=BIGINT},
      </if>
      <if test="payChannel != null" >
        #{payChannel,jdbcType=TINYINT},
      </if>
      <if test="note != null" >
        #{note,jdbcType=VARCHAR},
      </if>
      <if test="digest != null" >
        #{digest,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        #{state,jdbcType=TINYINT},
      </if>
      <if test="originalPayBillId != null" >
        #{originalPayBillId,jdbcType=BIGINT},
      </if>
      <if test="originalUnionPaySn != null" >
        #{originalUnionPaySn,jdbcType=CHAR},
      </if>
      <if test="lastPayTime != null" >
        #{lastPayTime,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.yaorange.pojo.TPayBillExample" resultType="java.lang.Integer" >
    select count(*) from t_pay_bill
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_pay_bill
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=BIGINT},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=BIGINT},
      </if>
      <if test="record.ssoId != null" >
        sso_id = #{record.ssoId,jdbcType=BIGINT},
      </if>
      <if test="record.nickName != null" >
        nick_name = #{record.nickName,jdbcType=VARCHAR},
      </if>
      <if test="record.unionPaySn != null" >
        union_pay_sn = #{record.unionPaySn,jdbcType=CHAR},
      </if>
      <if test="record.money != null" >
        money = #{record.money,jdbcType=INTEGER},
      </if>
      <if test="record.businessType != null" >
        business_type = #{record.businessType,jdbcType=TINYINT},
      </if>
      <if test="record.businessKey != null" >
        business_key = #{record.businessKey,jdbcType=BIGINT},
      </if>
      <if test="record.payChannel != null" >
        pay_channel = #{record.payChannel,jdbcType=TINYINT},
      </if>
      <if test="record.note != null" >
        note = #{record.note,jdbcType=VARCHAR},
      </if>
      <if test="record.digest != null" >
        digest = #{record.digest,jdbcType=VARCHAR},
      </if>
      <if test="record.state != null" >
        state = #{record.state,jdbcType=TINYINT},
      </if>
      <if test="record.originalPayBillId != null" >
        original_pay_bill_id = #{record.originalPayBillId,jdbcType=BIGINT},
      </if>
      <if test="record.originalUnionPaySn != null" >
        original_union_pay_sn = #{record.originalUnionPaySn,jdbcType=CHAR},
      </if>
      <if test="record.lastPayTime != null" >
        last_pay_time = #{record.lastPayTime,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_pay_bill
    set id = #{record.id,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=BIGINT},
      create_time = #{record.createTime,jdbcType=BIGINT},
      sso_id = #{record.ssoId,jdbcType=BIGINT},
      nick_name = #{record.nickName,jdbcType=VARCHAR},
      union_pay_sn = #{record.unionPaySn,jdbcType=CHAR},
      money = #{record.money,jdbcType=INTEGER},
      business_type = #{record.businessType,jdbcType=TINYINT},
      business_key = #{record.businessKey,jdbcType=BIGINT},
      pay_channel = #{record.payChannel,jdbcType=TINYINT},
      note = #{record.note,jdbcType=VARCHAR},
      digest = #{record.digest,jdbcType=VARCHAR},
      state = #{record.state,jdbcType=TINYINT},
      original_pay_bill_id = #{record.originalPayBillId,jdbcType=BIGINT},
      original_union_pay_sn = #{record.originalUnionPaySn,jdbcType=CHAR},
      last_pay_time = #{record.lastPayTime,jdbcType=BIGINT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.yaorange.pojo.TPayBill" >
    update t_pay_bill
    <set >
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=BIGINT},
      </if>
      <if test="ssoId != null" >
        sso_id = #{ssoId,jdbcType=BIGINT},
      </if>
      <if test="nickName != null" >
        nick_name = #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="unionPaySn != null" >
        union_pay_sn = #{unionPaySn,jdbcType=CHAR},
      </if>
      <if test="money != null" >
        money = #{money,jdbcType=INTEGER},
      </if>
      <if test="businessType != null" >
        business_type = #{businessType,jdbcType=TINYINT},
      </if>
      <if test="businessKey != null" >
        business_key = #{businessKey,jdbcType=BIGINT},
      </if>
      <if test="payChannel != null" >
        pay_channel = #{payChannel,jdbcType=TINYINT},
      </if>
      <if test="note != null" >
        note = #{note,jdbcType=VARCHAR},
      </if>
      <if test="digest != null" >
        digest = #{digest,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=TINYINT},
      </if>
      <if test="originalPayBillId != null" >
        original_pay_bill_id = #{originalPayBillId,jdbcType=BIGINT},
      </if>
      <if test="originalUnionPaySn != null" >
        original_union_pay_sn = #{originalUnionPaySn,jdbcType=CHAR},
      </if>
      <if test="lastPayTime != null" >
        last_pay_time = #{lastPayTime,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yaorange.pojo.TPayBill" >
    update t_pay_bill
    set update_time = #{updateTime,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=BIGINT},
      sso_id = #{ssoId,jdbcType=BIGINT},
      nick_name = #{nickName,jdbcType=VARCHAR},
      union_pay_sn = #{unionPaySn,jdbcType=CHAR},
      money = #{money,jdbcType=INTEGER},
      business_type = #{businessType,jdbcType=TINYINT},
      business_key = #{businessKey,jdbcType=BIGINT},
      pay_channel = #{payChannel,jdbcType=TINYINT},
      note = #{note,jdbcType=VARCHAR},
      digest = #{digest,jdbcType=VARCHAR},
      state = #{state,jdbcType=TINYINT},
      original_pay_bill_id = #{originalPayBillId,jdbcType=BIGINT},
      original_union_pay_sn = #{originalUnionPaySn,jdbcType=CHAR},
      last_pay_time = #{lastPayTime,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>