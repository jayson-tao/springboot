<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yaorange.mapper.TPayAccountMapper" >
  <resultMap id="BaseResultMap" type="com.yaorange.pojo.TPayAccount" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="create_time" property="createTime" jdbcType="BIGINT" />
    <result column="update_time" property="updateTime" jdbcType="BIGINT" />
    <result column="sso_id" property="ssoId" jdbcType="BIGINT" />
    <result column="useable_balance" property="useableBalance" jdbcType="INTEGER" />
    <result column="frozen_balance" property="frozenBalance" jdbcType="INTEGER" />
    <result column="credit_banance" property="creditBanance" jdbcType="INTEGER" />
    <result column="pay_password" property="payPassword" jdbcType="CHAR" />
    <result column="coupon_count" property="couponCount" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, create_time, update_time, sso_id, useable_balance, frozen_balance, credit_banance, 
    pay_password, coupon_count
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.yaorange.pojo.TPayAccountExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_pay_account
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from t_pay_account
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from t_pay_account
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.yaorange.pojo.TPayAccountExample" >
    delete from t_pay_account
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.yaorange.pojo.TPayAccount" >
    insert into t_pay_account (id, create_time, update_time, 
      sso_id, useable_balance, frozen_balance, 
      credit_banance, pay_password, coupon_count
      )
    values (#{id,jdbcType=BIGINT}, #{createTime,jdbcType=BIGINT}, #{updateTime,jdbcType=BIGINT}, 
      #{ssoId,jdbcType=BIGINT}, #{useableBalance,jdbcType=INTEGER}, #{frozenBalance,jdbcType=INTEGER}, 
      #{creditBanance,jdbcType=INTEGER}, #{payPassword,jdbcType=CHAR}, #{couponCount,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.yaorange.pojo.TPayAccount" >
    insert into t_pay_account
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="ssoId != null" >
        sso_id,
      </if>
      <if test="useableBalance != null" >
        useable_balance,
      </if>
      <if test="frozenBalance != null" >
        frozen_balance,
      </if>
      <if test="creditBanance != null" >
        credit_banance,
      </if>
      <if test="payPassword != null" >
        pay_password,
      </if>
      <if test="couponCount != null" >
        coupon_count,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="ssoId != null" >
        #{ssoId,jdbcType=BIGINT},
      </if>
      <if test="useableBalance != null" >
        #{useableBalance,jdbcType=INTEGER},
      </if>
      <if test="frozenBalance != null" >
        #{frozenBalance,jdbcType=INTEGER},
      </if>
      <if test="creditBanance != null" >
        #{creditBanance,jdbcType=INTEGER},
      </if>
      <if test="payPassword != null" >
        #{payPassword,jdbcType=CHAR},
      </if>
      <if test="couponCount != null" >
        #{couponCount,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.yaorange.pojo.TPayAccountExample" resultType="java.lang.Integer" >
    select count(*) from t_pay_account
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_pay_account
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=BIGINT},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=BIGINT},
      </if>
      <if test="record.ssoId != null" >
        sso_id = #{record.ssoId,jdbcType=BIGINT},
      </if>
      <if test="record.useableBalance != null" >
        useable_balance = #{record.useableBalance,jdbcType=INTEGER},
      </if>
      <if test="record.frozenBalance != null" >
        frozen_balance = #{record.frozenBalance,jdbcType=INTEGER},
      </if>
      <if test="record.creditBanance != null" >
        credit_banance = #{record.creditBanance,jdbcType=INTEGER},
      </if>
      <if test="record.payPassword != null" >
        pay_password = #{record.payPassword,jdbcType=CHAR},
      </if>
      <if test="record.couponCount != null" >
        coupon_count = #{record.couponCount,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_pay_account
    set id = #{record.id,jdbcType=BIGINT},
      create_time = #{record.createTime,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=BIGINT},
      sso_id = #{record.ssoId,jdbcType=BIGINT},
      useable_balance = #{record.useableBalance,jdbcType=INTEGER},
      frozen_balance = #{record.frozenBalance,jdbcType=INTEGER},
      credit_banance = #{record.creditBanance,jdbcType=INTEGER},
      pay_password = #{record.payPassword,jdbcType=CHAR},
      coupon_count = #{record.couponCount,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.yaorange.pojo.TPayAccount" >
    update t_pay_account
    <set >
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="ssoId != null" >
        sso_id = #{ssoId,jdbcType=BIGINT},
      </if>
      <if test="useableBalance != null" >
        useable_balance = #{useableBalance,jdbcType=INTEGER},
      </if>
      <if test="frozenBalance != null" >
        frozen_balance = #{frozenBalance,jdbcType=INTEGER},
      </if>
      <if test="creditBanance != null" >
        credit_banance = #{creditBanance,jdbcType=INTEGER},
      </if>
      <if test="payPassword != null" >
        pay_password = #{payPassword,jdbcType=CHAR},
      </if>
      <if test="couponCount != null" >
        coupon_count = #{couponCount,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yaorange.pojo.TPayAccount" >
    update t_pay_account
    set create_time = #{createTime,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=BIGINT},
      sso_id = #{ssoId,jdbcType=BIGINT},
      useable_balance = #{useableBalance,jdbcType=INTEGER},
      frozen_balance = #{frozenBalance,jdbcType=INTEGER},
      credit_banance = #{creditBanance,jdbcType=INTEGER},
      pay_password = #{payPassword,jdbcType=CHAR},
      coupon_count = #{couponCount,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>